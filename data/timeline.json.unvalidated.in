{
    "missions": [
        {
            "name": "nothing_here",
            "short_desc": "Nothing to see here, folks",
            "long_desc": "But maybe it might if you just wait a little longer...",
            "hint": "You're patient, right?",
            "start_events": [
                "chat::ada::nothing_here::wait-intro",
                "chat::marlon::initial",
                "chat::marlon::where_to_go::input"
            ],
            "artifacts": [
                {
                    "name": "artifact::nothing_here::patience",
                    "desc": "Demonstrated some level of patience",
                    "icon": "text-editor-symbolic",
                    "points": 100
                }
            ]
        },
        {
            "name": "intro",
            "short_desc": "Down the rabbit hole",
            "long_desc": "Why don't you answer the questions and see where the rabbit hole leads",
            "hint": "Just follow the prompts and search beyond your user account",
            "start_events": [
                "chat::ada::intro::hook",
                "chat::ada::intro::enjoyed_exploring",
                "chat::ada::intro::hook::challenge"
            ],
            "artifacts": [
                {
                    "name": "artifact::intro::hook",
                    "desc": "Started Endless Coding",
                    "icon": "text-editor-symbolic",
                    "points": 52
                },
                {
                    "name": "artifact::intro::choice_see_cool::challenge",
                    "desc": "Chose to see something cool",
                    "icon": "text-editor-symbolic",
                    "points": 52
                },
                {
                    "name": "artifact::intro::wobble-window",
                    "desc": "Discovered a new way of looking at things",
                    "icon": "text-editor-symbolic",
                    "points": 52
                }
            ]
        },
        {
            "name": "bashrc",
            "short_desc": "Your system's configuration",
            "long_desc": "It is time to find out where all those hidden toggles are. Pay attention to the clues that you're given and find out what you need to edit to get ahead.",
            "hint": "A system configuration file is just like any other file, right?",
            "start_events": [
                "bashrc::chat::ada::send_bashrc"
            ],
            "artifacts": [
                {
                    "name": "artifact::openbashrc",
                    "desc": "Looked at your shell configuration",
                    "icon": "text-editor-symbolic",
                    "points": 106
                }
            ]
        },
        {
            "name": "shellextension",
            "short_desc": "Shell extensions",
            "long_desc": "Learn how to modify the world around you.",
            "hint": "So many TODO's.",
            "start_events": [
                "chat::ada::shellextension::start",
                "chat::ada::shellextension::about",
                "chat::ada::shellextension::icon",
                "event::ada::shellextension::insert_extension_icon",
                "chat::ada::shellextension::show_icon",
                "chat::ada::shellextension::show_icon_pause"
            ],
            "artifacts": [
                {
                    "name": "artifact::shellextension:finished",
                    "icon": "text-editor-symbolic",
                    "desc": "Learned all about the shell extension tool",
                    "points": 112
                }
            ]
        },
        {
            "name": "terminalintro",
            "short_desc": "The Terminal. The System",
            "long_desc": "See what lies behind the curtains in the terminal. Complete the exercises in showmehow and learn more about this new world.",
            "hint": "Use 'showmehow' to start learning things",
            "start_events": [
                "chat::ada::terminalintro::just_the_beginning",
                "chat::ada::terminalintro::start_where_all_famous",
                "chat::ada::terminalintro::install_programming",
                "chat::ada::terminalintro::install_programming_code",
                "chat::ada::terminalintro::install_programming::challenge"
            ],
            "artifacts": [
                {
                    "name": "artifact::intro::install-terminal",
                    "icon": "text-editor-symbolic",
                    "desc": "Installed the terminal",
                    "points": 52
                },
                {
                    "name": "artifact::terminalintro::showmehow",
                    "desc": "Learned how to use showmehow",
                    "icon": "text-editor-symbolic",
                    "points": 12
                },
                {
                    "name": "artifact::terminalintro::navigation",
                    "desc": "Navigated filesystem in terminal",
                    "icon": "text-editor-symbolic",
                    "points": 46
                }
            ]
        },
        {
            "name": "terminaltasks",
            "short_desc": "Tricks that you couldn't do anywhere else",
            "long_desc": "Here's where you start your mastery. Start learning tricks that you couldn't possibly do anywhere else and show your friends who's the boss",
            "hint": "Pipes (|) are key here",
            "start_events": [
                "terminaltasks::setting::showmehow::add-textprocessing",
                "chat::ada::terminaltasks::intro",
                "listen::terminaltasks::showmehow-textprocessing"
            ],
            "artifacts": [
                {
                    "name": "artifact::terminaltasks::textprocessing",
                    "desc": "Processed text in the terminal",
                    "icon": "text-editor-symbolic",
                    "points": 120
                },
                {
                    "name": "artifact::terminaltasks::settings",
                    "desc": "Changed settings in the terminal",
                    "icon": "text-editor-symbolic",
                    "points": 141
                }
            ]
        },
        {
            "name": "processing",
            "short_desc": "Create beautiful drawings with processing",
            "long_desc": "You can create some drawings with code using the processing app",
            "hint": "If you get stuck, you can always ask for a sample file",
            "start_events": [
                "chat::ada::processing::time_something_new",
                "chat::ada::processing::processing_tool_drawings",
                "chat::ada::processing::chat_beginner_tutorial",
                "event::ada::processing::insert_processing_icon",
                "chat::ada::processing::show_icon",
                "chat::ada::processing::show_icon_pause"
            ],
            "artifacts": [
                {
                    "name": "artifact::processing::launched_processing",
                    "desc": "Launched processing",
                    "icon": "text-editor-symbolic",
                    "points": 131
                }
            ]
        },
        {
            "name": "weather",
            "short_desc": "Change the weather",
            "long_desc": "Well, you can manipulate the display of the aggregated weather data.",
            "hint": "Look for the codeview button on enabled applications",
            "start_events": [
                "chat::ada::codeview::weather::intro",
                "chat::ada::codeview::weather::guessed",
                "chat::ada::codeview::weather::changed",
                "chat::ada::codeview::weather::start_app",
                "chat::ada::codeview::weather::start_app::response"
            ],
            "artifacts": [
                {
                    "name": "artifact::codeview::hacked_weather",
                    "desc": "Hacked weather",
                    "icon": "text-editor-symbolic",
                    "points": 101
                }
            ]
        },
        {
            "name": "popquiz",
            "short_desc": "Popular culture quiz",
            "long_desc": "Misc quiz on music, cinema and sports.",
            "hint": "Choose wisely, you'll have to start over if you don't answer correctly",
            "start_events": [
                "chat::konrad::popquiz::misc::intro",
                "chat::konrad::popquiz::misc::ready"
            ],
            "artifacts": [
                {
                    "name": "artifact::popquiz::completed",
                    "desc": "Completed pop quiz",
                    "icon": "text-editor-symbolic",
                    "points": 101
                }
            ]
        },
        {
            "name": "yoursystem",
            "short_desc": "Uncover the wraps on your filesystem",
            "long_desc": "Look in all the nooks and crannies in your system",
            "hint": "Try starting with / and going down",
            "start_events": [
                "chat::ada::yoursystem::find_etc",
                "chat::ada::yoursystem::find_etc::response"
            ],
            "artifacts": [
                {
                    "name": "artifact::yoursystem::found_etc",
                    "desc": "Found out about /etc",
                    "icon": "text-editor-symbolic",
                    "points": 131
                },
                {
                    "name": "artifact::yoursystem::found_logs",
                    "desc": "Found out about where logs are stored",
                    "icon": "text-editor-symbolic",
                    "points": 124
                },
                {
                    "name": "artifact::yoursystem::found_configs",
                    "desc": "Found out about where configuration is stored",
                    "icon": "text-editor-symbolic",
                    "points": 200
                }
            ]
        },
        {
            "name": "python",
            "short_desc": "Get started with Python",
            "long_desc": "Get started with Python",
            "hint": "Remember to balance your brackets!",
            "start_events": [
                "python::setting::showmehow::add-python",
                "chat::ada::showmehow_python",
                "listen::showmehow_python::add_numbers"
            ],
            "artifacts": [
                {
                    "name": "artifact::python::add_numbers",
                    "desc": "Simple arithmetic with python",
                    "icon": "text-editor-symbolic",
                    "points": 10
                },
                {
                    "name": "artifact::python::print_string",
                    "icon": "text-editor-symbolic",
                    "desc": "Wrote your first python program",
                    "points": 10
                },
                {
                    "name": "artifact::python::string_format",
                    "desc": "Formatted a string with python",
                    "icon": "text-editor-symbolic",
                    "points": 30
                },
                {
                    "name": "artifact::python::split_string",
                    "desc": "Turned a string into a list with python",
                    "icon": "text-editor-symbolic",
                    "points": 64
                },
                {
                    "name": "artifact::python::join_string",
                    "desc": "Created a string out of a list with python",
                    "icon": "text-editor-symbolic",
                    "points": 32
                }
            ]
        },
        {
            "name": "python_functions",
            "short_desc": "Organise your code into functions",
            "long_desc": "Use functions to create composable programs and encourage reusable code",
            "hint": "Walk through what needs to be done in your head and see if you can order the functions",
            "start_events": [
                "chat::ada::python_functions::intro",
                "chat::ada::python_functions::enter_code",
                "chat::ada::python_functions::intro::attachment",
                "chat::ada::python_functions::how_to_run_file",
                "chat::ada::python_functions::challenge"
            ],
            "artifacts": [
                {
                    "name": "artifact::python_functions::found_answer",
                    "desc": "Solved the python functions problem",
                    "icon": "text-editor-symbolic",
                    "points": 20
                }
            ]
        },
        {
            "name": "python_lists",
            "short_desc": "Data Structures in Python",
            "long_desc": "Organise data in your programs and solve the puzzles by using functional structures",
            "hint": "Think of lists as big chunks of data. If you apply the same operation to everything, how does the chunk change?",
            "start_events": [
                "python::setting::showmehow::add-python-lists",
                "chat::ada::python_lists::intro",
                "listen::python_lists::convert_list"
            ],
            "artifacts": [
                {
                    "name": "artifact::python::convert_list",
                    "desc": "Used list comprehensions to map a list",
                    "icon": "text-editor-symbolic",
                    "points": 20
                },
                {
                    "name": "artifact::python::filter_list",
                    "desc": "Used list comprehensions to filter a list",
                    "icon": "text-editor-symbolic",
                    "points": 50
                },
                {
                    "name": "artifact::python::dict_comprehension",
                    "desc": "Built environment variable map",
                    "icon": "text-editor-symbolic",
                    "points": 30
                }
            ]
        },
        {
            "name": "python_classes",
            "short_desc": "Object Oriented Programming",
            "long_desc": "Use clases and objects to learn the foundations of programming for a user interface",
            "hint": "Object Oriented Programming is meant to model the real world. Think about how this would work in reality",
            "start_events": [
                "chat::ada::python_classes::intro",
                "chat::ada::python_classes::enter_code",
                "chat::ada::python_classes::intro::attachment",
                "chat::ada::python_classes::challenge"
            ],
            "artifacts": [
                {
                    "name": "artifact::python_classes::found_answer",
                    "desc": "Solved the Object-Orientated python problem",
                    "icon": "text-editor-symbolic",
                    "points": 20
                }
            ]
        },
        {
            "name": "showmehow_python_gi",
            "short_desc": "Accessing System Functionality with Python",
            "long_desc": "Use the GObject-Introspection Framework on your system to access all sorts of system level functionality.",
            "hint": "As soon as you import something with GObject-Introspection, you can use it like anything else",
            "start_events": [
                "python::setting::showmehow::add-python-gi",
                "chat::ada::showmehow_python_gi::intro",
                "listen::showmehow_python_gi::create_gi_binding"
            ],
            "artifacts": [
                {
                    "name": "artifact::python::create_gi_binding",
                    "desc": "Created GObject-Introspection binding with python",
                    "icon": "text-editor-symbolic",
                    "points": 10
                },
                {
                    "name": "artifact::python::instantiate_gi_class",
                    "desc": "Instantiated GObject-Introspection bound class",
                    "icon": "text-editor-symbolic",
                    "points": 10
                },
                {
                    "name": "artifact::python::send_gnotification",
                    "desc": "Sent system notifications with python",
                    "icon": "text-editor-symbolic",
                    "points": 10
                }
            ]
        }
    ],
    "start": {
        "initial_event": "start-mission::nothing_here"
    },
    "events": [
        {
            "name": "start-mission::nothing_here",
            "type": "start-mission",
            "data": {
                "name": "nothing_here"
            }
        },
        {
            "name": "chat::ada::nothing_here::wait-intro",
            "type": "wait-for",
            "data": {
                "timeout": 100000,
                "then": [
                    "chat::ada::nothing_here::artifact",
                    "start-mission::intro"
                ]
            }
        },
        {
            "name": "chat::ada::nothing_here::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::nothing_here::patience"
            }
        },
        {
            "name": "start-mission::intro",
            "type": "start-mission",
            "data": {
                "name": "intro"
            }
        },
        {
            "name": "chat::ada::intro::hook",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hi there!"
            }
        },
        {
            "name": "chat::ada::intro::enjoyed_exploring",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "I'm Ada, the Endless bot! Have you enjoyed exploring Endless OS?"
            }
        },
        {
            "name": "chat::ada::intro::hook::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::hook"
                    }
                },
                "responses": {
                    "success": [
                        "chat::ada::intro::hook::artifact",
                        "chat::ada::intro::more_meets_eye",
                        "chat::ada::intro::exists_secret_code",
                        "chat::ada::intro::type_exact_code",
                        "chat::ada::intro::wobbly_window_code",
                        "chat::ada::intro::hook::type_exact_code::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::intro::hook::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::hook"
            }
        },
        {
            "name": "chat::ada::intro::more_meets_eye",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Well, there’s a lot more to Endless than meets the eye! If you have the right knowledge, you can use this computer to do anything. Your imagination is the only limit."
            }
        },
        {
            "name": "chat::ada::intro::exists_secret_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Take this window for example. If you move it around, it looks like just a regular old window. But if I give you the secret code, you can transform it into a WOBBLY WINDOW!"
            }
        },
        {
            "name": "chat::ada::intro::type_exact_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Want to give it a shot? Type this exact code:"
            }
        },
        {
            "name": "chat::ada::intro::wobbly_window_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "wobbly_window = true;",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::intro::hook::type_exact_code::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::enable_wobbly_windows"
                    }
                },
                "styles": ["code"],
                "responses": {
                    "success": [
                        "event::intro::enable-wobbly-windows",
                        "listen::intro::wobble-window",
                        "chat::ada::intro::enable-wobbly-windows::comment"
                    ],
                    "failure": [
                        "chat::ada::intro::type_exact_code::again",
                        "chat::ada::intro::wobbly_window_code",
                        "chat::ada::intro::hook::type_exact_code::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::intro::type_exact_code::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "That wasn't quite right. Type this exact code:"
            }
        },
        {
            "name": "chat::ada::intro::enable-wobbly-windows::comment",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Did it work? Try moving a window around!"
            }
        },
        {
            "name": "event::intro::enable-wobbly-windows",
            "type": "change-setting",
            "data": {
                "schema": "org.gnome.shell",
                "key": "wobbly-effect",
                "variant_type": "b",
                "value": true
            }
        },
        {
            "name": "event::intro::disable-wobbly-windows",
            "type": "change-setting",
            "data": {
                "schema": "org.gnome.shell",
                "key": "wobbly-effect",
                "variant_type": "b",
                "value": false
            }
        },
        {
            "name": "listen::intro::wobble-window",
            "type": "listen-event",
            "data": {
                "name": "move-window",
                "received": [
                    "listen::intro::wobble-window::artifact",
                    "chat::ada::intro::wobble-window-comment",
                    "listen::intro::stop-wobble-window"
                ]
            }
        },
        {
            "name": "chat::ada::intro::wobble-window-comment",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Whoa! So cool!"
            }
        },
        {
            "name": "listen::intro::stop-wobble-window",
            "type": "listen-event",
            "data": {
                "name": "stop-moving-windows",
                "received": [
                    "chat::ada::intro::stop-wobble-windows-comment",
                    "event::intro::disable-wobbly-windows",
                    "intro::start-mission::terminalintro"
                ]
            }
        },
        {
            "name": "listen::intro::wobble-window::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::wobble-window"
            }
        },
        {
            "name": "chat::ada::intro::stop-wobble-windows-comment",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "You just wrote your first line of code in Endless OS!"
            }
        },
        {
            "name": "intro::start-mission::terminalintro",
            "type": "start-mission",
            "data": {
                "name": "terminalintro"
            }
        },
        {
            "name": "chat::ada::terminalintro::just_the_beginning",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "This is just the beginning. The more programming skills you unlock, the more cool things you can do with your Endless computer!"
            }
        },
        {
            "name": "chat::ada::terminalintro::start_where_all_famous",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "If you’re ready to take your next step into the world of Endless Code, we need to start where all the famous programmers got their start: in the Terminal."
            }
        },
        {
            "name": "chat::ada::terminalintro::install_programming",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Once you're ready, type this exact code to install Terminal:"
            }
        },
        {
            "name": "chat::ada::terminalintro::install_programming_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "install-terminal",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::terminalintro::install_programming::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::install_programming_hook"
                    }
                },
                "responses": {
                    "success": [
                        "chat::ada::terminalintro::install-terminal::artifact",
                        "event::ada::terminalintro::install-terminal::copy-terminal-desktop-file",
                        "event::ada::terminalintro::install-terminal::insert-terminal-icon",
                        "terminalintro::setting::showmehow::add-showmehow",
                        "listen::terminalintro::showmehow-showmehow",
                        "chat::ada::terminalintro::intro-complete",
                        "chat::ada::terminalintro::intro-complete::marlon",
                        "terminalintro::chat::ada::open_terminal",
                        "terminalintro::chat::ada::open_terminal::choice"
                    ],
                    "failure": [
                        "chat::ada::terminalintro::install_programming::again",
                        "chat::ada::terminalintro::install_programming::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::terminalintro::install_programming::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "'install-terminal' EXACTLY. I haven't got all day!"
            }
        },
        {
            "name": "chat::ada::terminalintro::install-terminal::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::install-terminal"
            }
        },
        {
            "name": "event::ada::terminalintro::install-terminal::copy-terminal-desktop-file",
            "type": "copy-file",
            "data": {
                "source": "coding-terminal.desktop",
                "target": "~/.local/share/applications/coding-terminal.desktop"
            }
        },
        {
            "name": "event::ada::terminalintro::install-terminal::insert-terminal-icon",
            "type": "modify-app-grid",
            "data": {
                "action": "add-app",
                "app": "coding-terminal.desktop"
            }
        },
        {
            "name": "chat::ada::terminalintro::intro-complete",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Excellent work! You should now see the Terminal app on the desktop. Click it to get started, and I’ll meet you there!"
            }
        },
        {
            "name": "chat::ada::terminalintro::intro-complete::marlon",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "By the way, if you ever get stuck or want to jump to a different coding activity, just talk to my bot buddy Marlon."
            }
        },
        {
            "name": "terminalintro::setting::showmehow::add-showmehow",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["showmehow", "joke", "playsong", "readfile", "breakit", "navigation"]
                }
            }
        },
        {
            "name": "terminalintro::chat::ada::open_terminal",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Go on, click that icon. I know you want to."
            }
        },
        {
            "name": "terminalintro::chat::ada::open_terminal::choice",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "",
                        "choices": {
                            "where": {
                                "text": "Where is it?"
                            },
                            "afraid": {
                                "text": "I'm afraid to"
                            }
                        }
                    }
                },
                "responses": {
                    "where": [
                        "terminalintro::chat::ada::open_terminal::where"
                    ],
                    "afraid": [
                        "terminalintro::chat::ada::open_terminal::afraid",
                        "terminalintro::chat::ada::open_terminal::where"
                    ]
                }
            }
        },
        {
            "name": "terminalintro::chat::ada::open_terminal::where",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Its on your desktop!"
            }
        },
        {
            "name": "terminalintro::chat::ada::open_terminal::afraid",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "I promise nothing bad will happen!"
            }
        },
        {
            "name": "listen::terminalintro::showmehow-showmehow",
            "type": "listen-event",
            "data": {
                "name": "showmehow-showmehow",
                "received": [
                    "terminalintro::chat::ada::open_terminal::showmehow-navigation",
                    "terminalintro::chat::ada::open_terminal::navigation-partner-content",
                    "listen::terminalintro::showmehow-navigation",
                    "artifact::terminalintro::showmehow"
                ]
            }
        },
        {
            "name": "artifact::terminalintro::showmehow",
            "type": "register-artifact",
            "data": {
                "name": "artifact::terminalintro::showmehow"
            }
        },
        {
            "name": "terminalintro::chat::ada::open_terminal::showmehow-navigation",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now that you've learned how to use showmehow, why not try the navigation lesson?"
            }
        },
        {
            "name": "listen::terminalintro::showmehow-navigation",
            "type": "listen-event",
            "data": {
                "name": "showmehow-navigation",
                "received": [
                    "terminalintro::start-mission::terminaltasks"
                ]
            }
        },
        {
            "name": "terminalintro::chat::ada::open_terminal::navigation-partner-content",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "I hope you will enjoy learning about the file system in Terminal. There’s so much more you can do! Check out this great lesson from <a href=\"https://www.codecademy.com/learn/learn-the-command-line\">Codecademy</a>!"
            }
        },
        {
            "name": "terminalintro::start-mission::terminaltasks",
            "type": "start-mission",
            "data": {
                "name": "terminaltasks"
            }
        },
        {
            "name": "terminaltasks::setting::showmehow::add-textprocessing",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["text"]
                }
            }
        },
        {
            "name": "chat::ada::terminaltasks::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now that you're working your way around terminal, let's try some stuff that you can't do anywhere else."
            }
        },
        {
            "name": "listen::terminaltasks::showmehow-textprocessing",
            "type": "listen-event",
            "data": {
                "name": "showmehow-textprocessing",
                "received": [
                    "chat::ada::terminaltasks::ps",
                    "terminaltasks::setting::showmehow::add-ps",
                    "listen::terminaltasks::showmehow-ps"
                ]
            }
        },
        {
            "name": "chat::ada::terminaltasks::ps",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "You can also see what is going on in your system using the terminal. Try the 'ps' lesson."
            }
        },
        {
            "name": "terminaltasks::setting::showmehow::add-ps",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["ps"]
                }
            }
        },
        {
            "name": "listen::terminaltasks::showmehow-ps",
            "type": "listen-event",
            "data": {
                "name": "showmehow-ps",
                "received": [
                    "chat::ada::terminaltasks::settings",
                    "terminaltasks::setting::showmehow::add-settings",
                    "listen::terminaltasks::showmehow-settings"
                ]
            }
        },
        {
            "name": "chat::ada::terminaltasks::settings",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "With the terminal you can also change settings on your system. Check out the 'settings' lesson on showmehow."
            }
        },
        {
            "name": "terminaltasks::setting::showmehow::add-settings",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                 "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["changesetting"]
                }
            }
        },
        {
            "name": "listen::terminaltasks::showmehow-settings",
            "type": "listen-event",
            "data": {
                "name": "showmehow-settings",
                "received": [
                    "terminaltasks::start-mission::processing"
                ]
            }
        },
        {
            "name": "terminaltasks::start-mission::processing",
            "type": "start-mission",
            "data": {
                "name": "processing"
            }
        },
        {
            "name": "chat::ada::processing::time_something_new",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Alright, time for something new!"
            }
        },
        {
            "name": "chat::ada::processing::processing_tool_drawings",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Processing is a great tool for creating interactive drawings with code. "
            }
        },
        {
          "name": "chat::ada::processing::chat_beginner_tutorial",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "To get started, click the Processing icon on the desktop. It should look like this:"
          }
        },
        {
            "name": "event::ada::processing::insert_processing_icon",
            "type": "modify-app-grid",
            "data": {
                "action": "add-app",
                "app": "org.processing.App.desktop"
            }
        },
        {
            "name": "chat::ada::processing::show_icon",
            "type": "chat-actor-desktop-attachement",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Processing",
                    "desktop-app": "org.processing.App.desktop"
                }
            }
        },
        {
            "name": "chat::ada::processing::show_icon_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_show_interface",
                        "chat::ada::processing::show_processing_interface",
                        "chat::ada::processing::show_processing_interface_pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_show_interface",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "The image below explains the main interface areas in the app."
            }
        },
        {
            "name": "chat::ada::processing::show_processing_interface",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Processing interface",
                    "path": "processing.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::show_processing_interface_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_first_code",
                        "chat::ada::processing::code_print_console",
                        "chat::ada::processing::chat_explain_comments",
                        "chat::ada::processing::chat_check_print",
                        "chat::ada::processing::chat_check_print::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_first_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now, let's write our first code. In the Text editor, type the code below, and then click on the play button to run your code."
            }
        },
        {
            "name": "chat::ada::processing::code_print_console",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// prints a message in the Console\nprint(\"Hello, Mars!\");",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::processing::chat_explain_comments",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "By the way, the text that comes after \"<span font_family=\"monospace\">//</span>\" is called a \"comment\" because it describes what that piece of code actually does. You can copy that too, but it’s not necessary for the code to run properly."
            }
        },
        {
            "name": "chat::ada::processing::chat_check_print",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "After you hit play, the message \"Hello, Mars\" should appear in the Console. Did you see the message?"
            }
        },
        {
            "name": "chat::ada::processing::chat_check_print::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_confirm_print",
                        "chat::ada::processing::chat_line_code",
                        "chat::ada::processing::code_line",
                        "chat::ada::processing::chat_line_example",
                        "chat::ada::processing::show_line_example",
                        "chat::ada::processing::show_line_example_pause"
                    ],
                    "no": [
                        "chat::ada::processing::chat_retry_print",
                        "chat::ada::processing::code_print_console",
                        "chat::ada::processing::chat_check_print",
                        "chat::ada::processing::chat_check_print::response"
                    ]
                }
            }
        },
        {
          "name": "chat::ada::processing::chat_retry_print",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Hm.. make sure you type the exact code below in the Text editor field, and then press play. Don't forget the semicolon!"
          }
        },
        {
          "name": "chat::ada::processing::chat_confirm_print",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Great! Now let's start drawing. How about we start with a simple line?"
          }
        },
        {
          "name": "chat::ada::processing::chat_line_code",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Type the below code into the Text editor, and then press play."
          }
        },
        {
            "name": "chat::ada::processing::code_line",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// sets size of the window\nsize(200,200);\n// draws a line\nline(90,150,80,160);",
                "styles": ["code"]
            }
        },
        {
          "name": "chat::ada::processing::chat_line_example",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "After you hit play, you should see something like this:"
          }
        },
        {
            "name": "chat::ada::processing::show_line_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Screenshot of line in Processing",
                    "path": "line.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::show_line_example_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_check_line",
                        "chat::ada::processing::chat_check_line::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_check_line",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Did your line appear in the Sketch window?"
            }
        },
        {
            "name": "chat::ada::processing::chat_check_line::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Did the line appear?",
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_confirm_line",
                        "chat::ada::processing::chat_explain_parameters",
                        "chat::ada::processing::show_line_parameters",
                        "chat::ada::processing::chat_tweak_line_parameters",
                        "chat::ada::processing::chat_move_to_circle",
                        "chat::ada::processing::chat_move_to_circle::response"
                    ],
                    "no": [
                        "chat::ada::processing::chat_retry_line",
                        "chat::ada::processing::show_sketch_code",
                        "chat::ada::processing::chat_compare_code",
                        "chat::ada::processing::chat_check_line",
                        "chat::ada::processing::chat_check_line::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_retry_line",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hm.. click the below icon to open a file containing the completed code."
            }
        },
        {
            "name": "chat::ada::processing::show_sketch_code",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "The completed code of the line",
                    "path": "line/line.pde"
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_compare_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Compare the completed code with your code and see if you can spot the difference. You can continue with this code if you want."
            }
        },
        {
            "name": "chat::ada::processing::chat_confirm_line",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "That's a nice line!"
            }
        },
        {
            "name": "chat::ada::processing::chat_explain_parameters",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "The numbers—also called \"parameters\" in the <span font_family=\"monospace\">line()</span> code tell Processing exactly where to draw the line."
            }
        },
        {
            "name": "chat::ada::processing::show_line_parameters",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Visual explanation of line parameters in Sketch",
                    "path": "line_key.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_tweak_line_parameters",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Feel free to tweak the line's parameters, press play, and see what happens! (Be sure to keep the values under 200 or else the line will go off screen)."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_circle",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Click the button when you're ready to move on."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_circle::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_circle_code",
                        "chat::ada::processing::code_circle",
                        "chat::ada::processing::chat_circle_example",
                        "chat::ada::processing::show_circle_example",
                        "chat::ada::processing::show_circle_example_pause"
                    ]
                }
            }
        },
        {
          "name": "chat::ada::processing::chat_circle_code",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Cool! Now let's try something new. Add the below code to your Text editor to draw a circle. You can recognize the new code because its comment says “draws a circle.”"
          }
        },
        {
            "name": "chat::ada::processing::code_circle",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// sets size of the window\nsize(200,200);\n// draws a line\nline(90,150,80,160);\n<span background='#3b9fde'>// draws a circle\nellipse(100,70,60,60);\n</span>\n// prints a message in the Console\nprint(\"Hello, Mars!\");",
                "styles": ["code"]
            }
        },
        {
          "name": "chat::ada::processing::chat_circle_example",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "After you hit play, you should see something like this:"
          }
        },
        {
            "name": "chat::ada::processing::show_circle_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Screenshot of circle in Processing",
                    "path": "circle.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::show_circle_example_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_check_circle",
                        "chat::ada::processing::chat_check_circle::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_check_circle",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Did your circle appear in the Sketch window?"
            }
        },
        {
            "name": "chat::ada::processing::chat_check_circle::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Did the circle appear?",
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_confirm_circle",
                        "chat::ada::processing::chat_explain_circle",
                        "chat::ada::processing::show_circle_parameters",
                        "chat::ada::processing::chat_tweak_circle_parameters",
                        "chat::ada::processing::chat_move_to_advanced",
                        "chat::ada::processing::chat_move_to_advanced::response"
                    ],
                    "no": [
                        "chat::ada::processing::chat_retry_circle",
                        "chat::ada::processing::code_circle",
                        "chat::ada::processing::chat_check_circle",
                        "chat::ada::processing::chat_check_circle::response"
                    ]
                }
            }
        },
        {
          "name": "chat::ada::processing::chat_retry_circle",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Hm.. make sure you type the exact code below in the Text editor field, and then press play. Double check your work!"
          }
        },
        {
          "name": "chat::ada::processing::chat_confirm_circle",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "A perfect circle!"
          }
        },
        {
          "name": "chat::ada::processing::chat_explain_circle",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "The <span font_family=\"monospace\">ellipse()</span> line of code tells Processing to draw an ellipse (or oval) with the parameters we chose:"
          }
        },
        {
            "name": "chat::ada::processing::show_circle_parameters",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Visual explanation of circle parameters in Sketch",
                    "path": "circle_key.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_tweak_circle_parameters",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Again, feel free to experiment by changing those parameters and pressing play to see what happens!"
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_advanced",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Click here when you're ready to move on."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_advanced::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_advanced_tutorial",
                        "chat::ada::processing::code_martian",
                        "chat::ada::processing::chat_martian_example",
                        "chat::ada::processing::show_martian_example",
                        "chat::ada::processing::show_martian_example_pause"
                    ]
                }
            }
        },
        {
          "name": "chat::ada::processing::chat_advanced_tutorial",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "With a little practice and creativity, you can use Processing to turn simple lines and circles into more complex works of art. To see an \"otherwordly\" example, add these lines to your code and press play."
          }
        },
        {
            "name": "chat::ada::processing::code_martian",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// size: 200 x 200 pixels\nsize(200,200);\n<span background='#3b9fde'>// draw rectangles from center\nrectMode(CENTER);\n// rectangle is the body\nrect(100,100,20,100);\n// legs\nline(90,150,80,160);\nline(110,150,120,160);\n// head\nellipse(100,70,60,60);\n// eyes\nellipse(81,70,16,32);\nellipse(119,70,16,32);</span>\n\n\n// prints a message in the Console\nprint(\"Hello, Mars!\");",
                "styles": ["code"]
            }
        },
        {
          "name": "chat::ada::processing::chat_martian_example",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "After you hit play, you should see something like this:"
          }
        },
        {
            "name": "chat::ada::processing::show_martian_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Screenshot of martian in Processing",
                    "path": "martian.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::show_martian_example_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_check_martian_appeared",
                        "chat::ada::processing::chat_check_martian_appeared::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_check_martian_appeared",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Did your Martian appear in the Sketch window?"
            }
        },
        {
            "name": "chat::ada::processing::chat_check_martian_appeared::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Did the martian appear?",
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_confirm_martian",
                        "chat::ada::processing::chat_move_to_colors",
                        "chat::ada::processing::chat_move_to_colors::response"
                    ],
                    "no": [
                        "chat::ada::processing::chat_suggest_compare",
                        "chat::ada::processing::show_martian_code",
                        "chat::ada::processing::chat_martian_can_continue",
                        "chat::ada::processing::chat_check_martian_appeared",
                        "chat::ada::processing::chat_check_martian_appeared::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_suggest_compare",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "If you don't see the Martian, click the below icon to open a file containing the completed code. See if you can spot the difference!"
            }
        },
        {
            "name": "chat::ada::processing::show_martian_code",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "The completed code of the Martian",
                    "path": "martian/martian.pde"
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_martian_can_continue",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "You can now continue from this point using the completed code."
            }
        },
        {
            "name": "chat::ada::processing::chat_confirm_martian",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Thankfully, it looks like a friendly alien! But we're not done yet..."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_colors",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Click the button when you're ready to continue."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_colors::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_color_code",
                        "chat::ada::processing::code_color_martian",
                        "chat::ada::processing::chat_explain_code_reading",
                        "chat::ada::processing::chat_martian_colors_example",
                        "chat::ada::processing::show_martian_colors_example",
                        "chat::ada::processing::show_martian_colors_example_pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_color_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Color in the Martian by adding the 'fill' commands below and pressing play."
            }
        },
        {
            "name": "chat::ada::processing::code_color_martian",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// size: 200 x 200 pixels\nsize(200,200);\n// draw rectangles the center\nrectMode(CENTER);\n<span background='#3b9fde'>// colors the background dark gray\nbackground(100);\n// colors the Martian's body green\nfill(0,200,0);</span>\n// rectangle is the body\nrect(100,100,20,100);\n// legs\nline(90,150,80,160);\nline(110,150,120,160);\n// head\nellipse(100,70,60,60);\n<span background='#3b9fde'>// colors the Martian's eyes black\nfill(0);</span>\n// eyes\nellipse(81,70,16,32);\nellipse(119,70,16,32);\n\n\n// prints a message in the Console\nprint(\"Hello, Mars!\");",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::processing::chat_explain_code_reading",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Make sure that your lines of code appear in exactly the same order as they do in the example. Processing reads your code from top to bottom, so adjusting the order will change your Martian's appearance."
            }
        },
        {
          "name": "chat::ada::processing::chat_martian_colors_example",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "If done correctly, your Martian should look like this:"
          }
        },
        {
            "name": "chat::ada::processing::show_martian_colors_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Screenshot of colored Martian in Processing",
                    "path": "martian_colors.png"
                }
            }
        },
        {
            "name": "chat::ada::processing::show_martian_colors_example_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_check_martian_colors",
                        "chat::ada::processing::chat_check_martian_colors::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_check_martian_colors",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Did your Martian appear with a green body and black eyes in the Sketch window?"
            }
        },
        {
            "name": "chat::ada::processing::chat_check_martian_colors::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Did the Martian appear with colors?",
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_confirm_martian_colors",
                        "chat::ada::processing::chat_explain_martian_grayscale",
                        "chat::ada::processing::code_grayscale",
                        "chat::ada::processing::chat_explain_martian_rgb",
                        "chat::ada::processing::code_rgb",
                        "chat::ada::processing::chat_tweak_color",
                        "chat::ada::processing::chat_move_to_stroke",
                        "chat::ada::processing::chat_move_to_stroke::response"
                    ],
                    "no": [
                        "chat::ada::processing::chat_retry_martian_colors",
                        "chat::ada::processing::code_color_martian",
                        "chat::ada::processing::chat_check_martian_colors",
                        "chat::ada::processing::chat_check_martian_colors::response"
                    ]
                }
            }
        },
        {
          "name": "chat::ada::processing::chat_retry_martian_colors",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Hm.. why don't you try again? Make sure that your lines of code appear in exactly the same order as above. Processing reads your code from top to bottom, so adjusting the order will change the look of your Martian. Type the exact code below in the Text editor field, and then press play."
          }
        },
        {
          "name": "chat::ada::processing::chat_confirm_martian_colors",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Now that's a Martian! So what's going on here?"
          }
        },
        {
          "name": "chat::ada::processing::chat_explain_martian_grayscale",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "When adding color with <span font_family=\"monospace\">background()</span> and <span font_family=\"monospace\">fill()</span>, you can either do it in grayscale mode or in RGB (red-green-blue) mode. In grayscale mode, you simply pick a number between 0 (black) and 255 (white), like you did with the background and the eyes:"
          }
        },
        {
            "name": "chat::ada::processing::code_grayscale",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// colors the background dark gray\nbackground(100);\n// colors the Martian's eyes black\nfill(0);",
                "styles": ["code"]
            }
        },
        {
          "name": "chat::ada::processing::chat_explain_martian_rgb",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "In RGB mode, each parameter is a value from 0 to 255. So, in our example, we selected <span font_family=\"monospace\">0</span> for red, <span font_family=\"monospace\">200</span> for green, and <span font_family=\"monospace\">0</span> for blue. That's how we colored the Martian's body green!"
          }
        },
        {
            "name": "chat::ada::processing::code_rgb",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// colors the Martian's body green\nfill(0,200,0);",
                "styles": ["code"]
            }
        },
        {
          "name": "chat::ada::processing::chat_tweak_color",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Feel free to experiment with changing your Martian's colors by changing those parameters in your code! Here are some tips for creating certain colors in RGB mode: \n Red + Green = Yellow \n Red + Blue = Purple \n Green + Blue = Cyan"
          }
        },
        {
            "name": "chat::ada::processing::chat_move_to_stroke",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "When you're done coloring your alien, click the button to continue"
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_stroke::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::chat_stroke_code",
                        "chat::ada::processing::code_stroke",
                        "chat::ada::processing::chat_stroke_color",
                        "chat::ada::processing::chat_tweak_martian",
                        "chat::ada::processing::chat_move_to_cool_example",
                        "chat::ada::processing::chat_move_to_cool_example::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::chat_stroke_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "The default \"stroke weight\" of our lines and circles is a single pixel, but this can be changed with the <span font_family=\"monospace\">strokeWeight()</span> function. The single parameter to <span font_family=\"monospace\">strokeWeight()</span> sets the width of drawn lines. For example, this code would make your Martian have a thicker head:"
            }
        },
        {
            "name": "chat::ada::processing::code_stroke",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "// thickens the Martian's head\nstrokeWeight(8);",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::processing::chat_stroke_color",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "You can also change the stroke color with the code <span font_family=\"monospace\">stroke()</span> inputting either one value (for grayscale mode) or three values (for RGB mode), making sure to input the appropriate parameters as described before."
            }
        },
        {
            "name": "chat::ada::processing::chat_tweak_martian",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Play around with your Martian, adjust its stroke weight, stroke color, or anything else you feel like changing."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_cool_example",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "When you're ready to see something really cool, click the button below to continue."
            }
        },
        {
            "name": "chat::ada::processing::chat_move_to_cool_example::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::processing::wave_explanation",
                        "chat::ada::processing::wave_attachment",
                        "processing::start-mission::yoursystem"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::processing::wave_explanation",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Here's an example of just how far you can go with a little bit of code."
            }
        },
        {
            "name": "chat::ada::processing::wave_attachment",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Waves",
                    "path": "wave/wave.pde"
                }
            }
        },
        {
            "name": "codeview::start-mission::weather",
            "type": "start-mission",
            "data": {
                "name": "weather"
            }
        },
        {
            "name": "chat::ada::codeview::weather::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Alright, it’s time for CodeView!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::guessed",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "If you haven’t already guessed, everything on your computer screen has code running behind it: the cursor you’re moving around... the desktop... the icons on the desktop... even this chat window!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::changed",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "But usually we can’t peek at the code running our favorite programs. That’s about to change."
            }
        },
        {
            "name": "chat::ada::codeview::weather::start_app",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "On the desktop, you should see an icon for the “Weather” app. Click the icon, and let me know once the app opens."
            }
        },
        {
            "name": "chat::ada::codeview::weather::start_app::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Opened the app?",
                        "choices": {
                            "yes": {
                                "text": "Done!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::start_app::old",
                        "chat::ada::codeview::weather::start_app::what",
                        "chat::ada::codeview::weather::flip_screen::hint_chat",
                        "chat::ada::codeview::weather::flip_screen::hint_screenshot",
                        "chat::ada::codeview::weather::flip_screen::hint_screenshot_pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::start_app::old",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Looks like a regular old Weather app, right? You can see the temperature outside, the current weather conditions, and even a forecast for the next few days."
            }
        },
        {
            "name": "chat::ada::codeview::weather::start_app::what",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "But what if we wanted to modify it? What if we wanted to make changes to the code behind the Weather app? We can do that with CodeView!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::flip_screen::hint_chat",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Do you see the little white icon in the bottom righthand corner of the Weather app? It should look like this:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::flip_screen::hint_screenshot",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Flip to source code editor button",
                    "path": "codeview-icon.png"
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::flip_screen::hint_screenshot_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::flip_screen::hint_chat_second",
                        "chat::ada::codeview::weather::flip_screen::response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::flip_screen::hint_chat_second",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Click it to flip the window and view the code behind the Weather app! Let me know once you’ve done it."
            }
        },
        {
            "name": "chat::ada::codeview::weather::flip_screen::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Flipped the app?",
                        "choices": {
                            "yes": {
                                "text": "Done!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::editor::welcome",
                        "chat::ada::codeview::weather::editor::overview",
                        "chat::ada::codeview::weather::editor::overview::screenshot",
                        "chat::ada::codeview::weather::editor::overview::screenshot_pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::editor::welcome",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Welcome to CodeView."
            }
        },
        {
            "name": "chat::ada::codeview::weather::editor::overview",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Here’s a visual explanation of what you’re looking at:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::editor::overview::screenshot",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Overview of source code editor",
                    "path": "builder-overview.png"
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::editor::overview::screenshot_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::editor::task",
                        "chat::ada::codeview::weather::first_task::description",
                        "chat::ada::codeview::weather::first_task::overview",
                        "chat::ada::codeview::weather::first_task::navigate",
                        "chat::ada::codeview::weather::first_task::select",
                        "chat::ada::codeview::weather::first_task::pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::editor::task",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Make sense? Then let’s make our first modification!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::description",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Let’s say you wanted to replace the text that tells you the current weather conditions (e.g. “Scattered clouds”) with information about the current wind speed and direction. That’s actually a pretty simple change!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::overview",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "To make the change, we’ll start on the lefthand side of CodeView, where you see the project folders and source files."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::navigate",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Navigate to src >> app >> city.js. (In other words, open the “src” folder, then open the “app” folder, and there you’ll find the “city.js.” file.)"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::select",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Once you select the “city.js” file, you should see its source code in the very center of the screen."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::first_task::prompt",
                        "chat::ada::codeview::weather::first_task::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::prompt",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Found it? If you’re in the right file, you should see a year in line 3 of the code. What’s the year?"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "weather_year::challenge"
                    }
                },
                "responses": {
                    "success": [
                        "chat::ada::codeview::weather::first_task::challenge::success",
                        "chat::ada::codeview::weather::first_task::challenge::code_line",
                        "chat::ada::codeview::weather::first_task::challenge::checking",
                        "chat::ada::codeview::weather::first_task::challenge::found"
                    ],
                    "failure": [
                        "chat::ada::codeview::weather::first_task::challenge::hint",
                        "chat::ada::codeview::weather::first_task::challenge::screenshot",
                        "chat::ada::codeview::weather::first_task::challenge::screenshot_pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Excellent work! Now that you’ve found the right file, you need to find the line of code to make our app modification. Scroll down to line 179, where you should find the following code:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::hint",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hm.. that’s not right. Are you sure you’re in the right folder? Here’s something to help you navigate to src >> app >> city.js."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::prompt",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hm.. that’s not right. Are you sure you’re in the right folder? Here’s something to help you navigate to src >> app >> city.js."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::screenshot",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Hint for finding the copyright year.",
                    "path": "codeview-builder.png"
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::screenshot_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::first_task::challenge::prompt",
                        "chat::ada::codeview::weather::first_task::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::code_line",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "this._conditionsLabel.label = Util.getWeatherConditions(info);",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::checking",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Do you see it?"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::found",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Found the line containing the year?",
                        "choices": {
                            "yes": {
                                "text": "Found it!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::first_task::challenge::task_details",
                        "chat::ada::codeview::weather::first_task::challenge::code_change",
                        "chat::ada::codeview::weather::first_task::challenge::save",
                        "chat::ada::codeview::weather::first_task::challenge::run",
                        "chat::ada::codeview::weather::first_task::challenge::patience",
                        "chat::ada::codeview::weather::first_task::challenge::pause"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::task_details",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Great! Now we’re going to make that change we talked about. Instead of displaying general weather conditions, we’re going to display wind conditions. To make this modification, simply replace the existing code at line 179 with this new code:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::code_change",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "this._conditionsLabel.label = \"Wind: \" + this._info.get_wind();",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::save",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Once you’ve made the change (and double checked your work), hit ctrl+S to save changes."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::run",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "To view the change in the actual app, use the play button at the center top to build and run your changes. CodeView will build and install the app."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::patience",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "This can take a moment, so please be patient."
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "prompt": "Ready to continue?",
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::first_task::challenge::outro",
                        "chat::ada::codeview::weather::first_task::challenge::ready"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::outro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "When you’re ready to make the next modification, let me know!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::first_task::challenge::ready",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::second_task::intro",
                        "chat::ada::codeview::weather::second_task::same",
                        "chat::ada::codeview::weather::second_task::happen",
                        "chat::ada::codeview::weather::second_task::navigate",
                        "chat::ada::codeview::weather::second_task::code_snippet",
                        "chat::ada::codeview::weather::second_task::prompt",
                        "chat::ada::codeview::weather::second_task::found"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "So the first change we made replaced the description of general weather conditions with a description of wind conditions."
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::same",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "But what if we wanted to see both sets of information at the same time?"
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::happen",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Let’s make it happen!"
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::navigate",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "First, we need to make a change in a different file. Navigate to data >> weather-widget.ui, and add the following “label definition” to line 88:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::code_snippet",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "&lt;child&gt; \n  &lt;object class=\"GtkLabel\" id=\"windLabel\"&gt; \n    &lt;property name=\"name\"&gt;wind-label&lt;/property&gt; \n    &lt;property name=\"visible\"&gt;True&lt;/property&gt; \n    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt; \n    &lt;property name=\"valign\"&gt;start&lt;/property&gt; \n    &lt;property name=\"vexpand\"&gt;True&lt;/property&gt; \n    &lt;property name=\"halign\"&gt;start&lt;/property&gt; \n  &lt;/object&gt; \n  &lt;packing&gt; \n    &lt;property name=\"left_attach\"&gt;1&lt;/property&gt; \n    &lt;property name=\"top_attach\"&gt;2&lt;/property&gt; \n    &lt;property name=\"width\"&gt;1&lt;/property&gt; \n    &lt;property name=\"height\"&gt;1&lt;/property&gt; \n  &lt;/packing&gt; \n&lt;/child&gt;",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::prompt",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Let me know when you’ve finished this step."
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::found",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Found it?",
                        "choices": {
                            "yes": {
                                "text": "Found it!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::codeview::weather::second_task::onward",
                        "chat::ada::codeview::weather::second_task::line_label",
                        "chat::ada::codeview::weather::second_task::label",
                        "chat::ada::codeview::weather::second_task::line_conditions",
                        "chat::ada::codeview::weather::second_task::conditions",
                        "chat::ada::codeview::weather::second_task::save",
                        "chat::ada::codeview::weather::second_task::outro"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::onward",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Onward! Now let’s head back to the first file we edited (src >> app >> city.js) to make a couple other changes."
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::line_label",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "In line 39, add this label:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::label",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "windLabel",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::line_conditions",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Then in line 180, add the following code to set the label to display wind conditions:"
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::conditions",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "this._windLabel.label = \"Wind: \" + this._info.get_wind();",
                "styles": ["code"]
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::save",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "That’s it! Now just hit ctrl+S to save changes."
            }
        },
        {
            "name": "chat::ada::codeview::weather::second_task::outro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Again, to view the change in the actual app, use the play button at the center top to build and run your changes. CodeView will build and install the app."
            }
        },
        {
            "name": "popquiz::start-mission::popquiz",
            "type": "start-mission",
            "data": {
                "name": "popquiz"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "Alright, it’s time for Quiz! You will be getting questions for misc categories. Choose wisely, because if you give the wrong answer, you'll have to start over. Are you ready?"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::ready",
            "type": "input-user",
            "data": {
                "actor": "Konrad",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Ready to start?",
                        "choices": {
                            "yes": {
                                "text": "Yes! Let's go!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::konrad::popquiz::misc::jarjar",
                        "chat::konrad::popquiz::misc::jarjar_question"
                    ]
                }
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::wrong",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "Ops! You have chosen the wrong answer. You'll have to start again. Are you ready?"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::jarjar",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "The character Jar Jar Binks first appears in which of the Star Wars movies?"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::jarjar_question",
            "type": "input-user",
            "data": {
                "actor": "Konrad",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "op1": {
                                "text": "The Phantom Menace"
                            },
                            "op2": {
                                "text": "Attack of the Clones"
                            },
                            "op3": {
                                "text": "The Return of the Jedi"
                            },
                            "op4": {
                                "text": "Rogue One"
                            }
                        }
                    }
                },
                "responses": {
                    "op1": [
                        "chat::konrad::popquiz::misc::correct",
                        "chat::konrad::popquiz::misc::beatles",
                        "chat::konrad::popquiz::misc::beatles_question"
                    ],
                    "op2": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op3": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op4": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ]
                }
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::beatles",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "What city did music band 'The Beatles' come from?"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::beatles_question",
            "type": "input-user",
            "data": {
                "actor": "Konrad",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "op1": {
                                "text": "Manchester"
                            },
                            "op2": {
                                "text": "London"
                            },
                            "op3": {
                                "text": "Liverpool"
                            },
                            "op4": {
                                "text": "Leeds"
                            }
                        }
                    }
                },
                "responses": {
                    "op3": [
                        "chat::konrad::popquiz::misc::correct",
                        "chat::konrad::popquiz::misc::lebron",
                        "chat::konrad::popquiz::misc::lebron_question"
                    ],
                    "op1": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op2": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op4": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ]
                }
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::lebron",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "Which one of these people is a sports star?"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::lebron_question",
            "type": "input-user",
            "data": {
                "actor": "Konrad",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "op1": {
                                "text": "Richard Stallman"
                            },
                            "op2": {
                                "text": "Hugh Laurie"
                            },
                            "op3": {
                                "text": "LeBron James"
                            },
                            "op4": {
                                "text": "Denzel Washington"
                            }
                        }
                    }
                },
                "responses": {
                    "op3": [
                        "chat::konrad::popquiz::misc::correct",
                        "chat::konrad::popquiz::misc::harry",
                        "chat::konrad::popquiz::misc::harry_question"
                    ],
                    "op1": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op2": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op4": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ]
                }
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::harry",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "Which is the symbol of the Hufflepuff house on the Harry Potter stories?"
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::harry_question",
            "type": "input-user",
            "data": {
                "actor": "Konrad",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "op1": {
                                "text": "Lion"
                            },
                            "op2": {
                                "text": "Badger"
                            },
                            "op3": {
                                "text": "Eagle"
                            },
                            "op4": {
                                "text": "Snake"
                            }
                        }
                    }
                },
                "responses": {
                    "op4": [
                        "chat::konrad::popquiz::misc::finished"
                    ],
                    "op1": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op2": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ],
                    "op3": [
                        "chat::konrad::popquiz::misc::wrong",
                        "chat::konrad::popquiz::misc::ready"
                    ]
                }
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::correct",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "Correct! Next one..."
            }
        },
        {
            "name": "chat::konrad::popquiz::misc::finished",
            "type": "chat-actor",
            "data": {
                "actor": "Konrad",
                "message": "Awesome! You finished the quiz. Congratulations!"
            }
        },
        {
            "name": "shellextension::start-mission::shellextension",
            "type": "start-mission",
            "data": {
                "name": "shellextension"
            }
        },
        {
            "name": "chat::ada::shellextension::start",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "We will be learning about EOS shell extensions. The EOS shell is based off the GNOME shell. Learn more about GNOME shell <a href=\"https://wiki.gnome.org/Projects/GnomeShell\">here.</a>"
            }
        },
        {
            "name": "chat::ada::shellextension::about",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "EOS Shell Extensions are are small pieces of code written by developers that modify the way your system works and looks."
            }
        },
        {
          "name": "chat::ada::shellextension::icon",
          "type": "chat-actor",
          "data": {
            "actor": "Ada",
            "message": "Lets first have a look at the Extensions preferences application. To get started, click the Extensions icon."
          }
        },
        {
            "name": "event::ada::shellextension::insert_extension_icon",
            "type": "modify-app-grid",
            "data": {
                "action": "add-app",
                "app": "eos-shell-extension-prefs.desktop"
            }
        },
        {
            "name": "chat::ada::shellextension::show_icon",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Shell extensions",
                    "path": "eos-shell-extension-prefs.desktop"
                }
            }
        },
        {
            "name": "chat::ada::shellextension::show_icon_pause",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Clicked and ready to continue?",
                        "choices": {
                            "yes": {
                                "text": "Ready!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::shellextension::about_extension_prefs",
                        "chat::ada::shellextension::enable_todo_extension",
                        "chat::ada::shellextension::show_todo_extension",
                        "chat::ada::shellextension::clue_todo_extension"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::shellextension::about_extension_prefs",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "There are a couple of extensions for you to enable already. Lets start with TODO extension, its a simple way to keep track of things you need to do. Click on the OFF button and your the TODO extension will be enabled."
            }
        },
        {
            "name": "chat::ada::shellextension::enable_todo_extension",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Your TODO list should now be located in the right corner of your screen."
            }
        },
        {
            "name": "chat::ada::shellextension::show_todo_extension",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Location of the TODO Extension",
                    "path": "extension-todo.png"
                }
            }
        },
        {
            "name": "chat::ada::shellextension::clue_todo_extension",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Found it?",
                        "choices": {
                            "yes": {
                                "text": "Yes!"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::ada::shellextension::clue_todo_about",
                        "chat::ada::shellextension::clue_todo_start",
                        "chat::ada::shellextension::clue_todo_response"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::shellextension::clue_todo_about",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Great job! You managed to customize your enviroment. Lets explore the TODO extension. Click the number (4) in the right corner to reveal all the TODOs."
            }
        },
        {
            "name": "chat::ada::shellextension::clue_todo_start",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "There should be a list of default TODO tasks, but one looks cryptic, select that one below to proceed."
            }
        },
        {
            "name": "chat::ada::shellextension::clue_todo_response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "1234": {
                                "text": "1234"
                            },
                            "1CF86": {
                                "text": "1CF86"
                            },
                            "8I903": {
                                "text": "8I903"
                            }
                        }
                    }
                },
                "responses": {
                    "1234": [
                        "chat::ada::shellextension::clue_todo_again",
                        "chat::ada::shellextension::clue_todo_response"
                    ],
                    "8I903": [
                        "chat::ada::shellextension::clue_todo_again",
                        "chat::ada::shellextension::clue_todo_response"
                    ],
                    "1CF86": [
                        "chat::ada::shellextension::clue_todo_success",
                        "artifact::shellextension:todo"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::shellextension::clue_todo_again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hmm, check again, that was not the right one."
            }
        },
        {
            "name": "chat::ada::shellextension::clue_todo_success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Congratulations! You uncovered the hidden TODO task!"
            }
        },
        {
            "name": "artifact::shellextension:todo",
            "type": "register-artifact",
            "data": {
                "name": "artifact::shellextension:finished"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_etc",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now it is time to find the system configuration files. They're known in oldspeak as 'Editable Text Configuration' files. What directory do you think we can find them in?"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_etc::response",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "etc": {
                                "text": "/etc"
                            },
                            "usr": {
                                "text": "/usr"
                            },
                            "var": {
                                "text": "/var"
                            },
                            "boot": {
                                "text": "/boot"
                            }
                        }
                    }
                },
                "responses": {
                    "usr": [
                        "chat::ada::yoursystem::find_etc::again",
                        "chat::ada::yoursystem::find_etc::response"
                    ],
                    "var": [
                        "chat::ada::yoursystem::find_etc::again",
                        "chat::ada::yoursystem::find_etc::response"
                    ],
                    "boot": [
                        "chat::ada::yoursystem::find_etc::again",
                        "chat::ada::yoursystem::find_etc::response"
                    ],
                    "etc": [
                        "chat::ada::yoursystem::find_etc::success",
                        "artifact::yoursystem::found_etc",
                        "chat::ada::yoursystem::find_logs",
                        "chat::ada::yoursystem::find_logs::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::yoursystem::find_etc::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hmm, I don't see any text files in there."
            }
        },
        {
            "name": "chat::ada::yoursystem::find_etc::success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Of course. 'Editable Text Configuration' files shortens down to 'etc'."
            }
        },
        {
            "name": "chat::ada::yoursystem::find_logs",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now, where can you find your system logs"
            }
        },
        {
            "name": "artifact::yoursystem::found_etc",
            "type": "register-artifact",
            "data": {
                "name": "artifact::yoursystem::found_logs"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_logs::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Your Answer",
                        "choices": {
                            "etc": {
                                "text": "/etc"
                            },
                            "usr": {
                                "text": "/usr"
                            },
                            "var": {
                                "text": "/var"
                            },
                            "boot": {
                                "text": "/boot"
                            }
                        }
                    }
                },
                "responses": {
                    "usr": [
                        "chat::ada::yoursystem::find_logs::again",
                        "chat::ada::yoursystem::find_logs::challenge"
                    ],
                    "var": [
                        "chat::ada::yoursystem::find_logs::success",
                        "artifact::yoursystem::found_logs",
                        "chat::ada::yoursystem::find_configs",
                        "chat::ada::yoursystem::find_configs::challenge"
                    ],
                    "boot": [
                        "chat::ada::yoursystem::find_logs::again",
                        "chat::ada::yoursystem::find_logs::challenge"
                    ],
                    "etc": [
                        "chat::ada::yoursystem::find_logs::again",
                        "chat::ada::yoursystem::find_logs::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::yoursystem::find_logs::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Nope, no logs here"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_logs::success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Sweet, all the logs are here. You can also use `journalctl` to view all the logs in one place."
            }
        },
        {
            "name": "artifact::yoursystem::found_logs",
            "type": "register-artifact",
            "data": {
                "name": "artifact::yoursystem::found_logs"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_configs",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "There's lots of configuration files in your home directory. But they're all hiddden from view. Can you tell me in one character or less why that is?"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_configs::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "yoursystem::find_configs"
                    }
                },
                "responses": {
                    "success": [
                        "chat::ada::yoursystem::find_configs::success",
                        "artifact::yoursystem::found_configs",
                        "yoursystem::start-mission::python"
                    ],
                    "failure": [
                        "chat::ada::yoursystem::find_configs::again",
                        "chat::ada::yoursystem::find_configs::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::yoursystem::find_configs::success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "That's right! They all begin with a '.' so they are hidden. But you can unhide them. Why don't you try pressing Control-H in the File Manager and see what you find?"
            }
        },
        {
            "name": "chat::ada::yoursystem::find_configs::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Hmm, no it isn't quite that. They all start with one and it isn't a letter or an number. But it causes them to be hidden from view. Why not search the internet to find out what it is?"
            }
        },
        {
            "name": "artifact::yoursystem::found_configs",
            "type": "register-artifact",
            "data": {
                "name": "artifact::yoursystem::found_configs"
            }
        },
        {
            "name": "yoursystem::start-mission::python",
            "type": "start-mission",
            "data": {
                "name": "python"
            }
        },
        {
            "name": "chat::ada::showmehow_python",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now that you've learned a bit about what runs your system and the files in your system, how about we start learning a programming language so that you can write your own programs? I've added a new lesson to showmehow to start exploring the Python programming language. Check it out."
            }
        },
        {
            "name": "python::setting::showmehow::add-python",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["python"]
                }
            }
        },
        {
            "name": "listen::showmehow_python::add_numbers",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-add-numbers",
                "received": [
                    "listen::showmehow_python::print_string",
                    "artifact::python::add_numbers"
                ]
            }
        },
        {
            "name": "artifact::python::add_numbers",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::add_numbers"
            }
        },
        {
            "name": "artifact::python::print_string",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::print_string"
            }
        },
        {
            "name": "artifact::python::string_format",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::string_format"
            }
        },
        {
            "name": "artifact::python::split_string",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::split_string"
            }
        },
        {
            "name": "artifact::python::join_string",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::join_string"
            }
        },
        {
            "name": "listen::showmehow_python::print_string",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-print-string",
                "received": [
                    "listen::showmehow_python::string_format",
                    "artifact::python::print_string"
                ]
            }
        },
        {
            "name": "listen::showmehow_python::string_format",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-string-format",
                "received": [
                    "listen::showmehow_python::split_string",
                    "artifact::python::string_format"
                ]
            }
        },
        {
            "name": "listen::showmehow_python::split_string",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-split-string",
                "received": [
                    "listen::showmehow_python::join_string",
                    "artifact::python::split_string"
                ]
            }
        },
        {
            "name": "listen::showmehow_python::join_string",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-join-string",
                "received": [
                    "showmehow_python::start-mission::python_functions",
                    "artifact::python::join_string"
                ]
            }
        },
        {
            "name": "showmehow_python::start-mission::python_functions",
            "type": "start-mission",
            "data": {
                "name": "python_functions"
            }
        },
        {
            "name": "chat::ada::python_functions::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now it is time to edit your first Python file. I'm going to send you something and you'll need to call the right functions in order to solve the problem I'm going to give you"
            }
        },
        {
            "name": "chat::ada::python_functions::enter_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Can you tell me what the output of this file is once you run it with the code: '5 2 8 4 9 1'?"
            }
        },
        {
            "name": "chat::ada::python_functions::intro::attachment",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Some functions",
                    "path": "functions.py"
                }
            }
        },
        {
            "name": "chat::ada::python_functions::how_to_run_file",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "You can run this file by using the <span font_family='monospace'>python</span> command in the terminal. Copy the contents of this file to a new one called 'functions.py', then navigate to that directory in the terminal and run it with: <span font_family='monospace'>python functions.py 5 2 8 4 9 1</span>"
            }
        },
        {
            "name": "chat::ada::python_functions::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "python_functions::challenge"
                    }
                },
                "responses": {
                    "success": [
                        "chat::ada::python_functions::challenge::success",
                        "artifact::python_functions::found_answer",
                        "python_functions::start-mission::python_lists"
                    ],
                    "failure": [
                        "chat::ada::python_functions::challenge::again",
                        "chat::ada::python_functions::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::python_functions::challenge::success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Correct! You put the functions together in the right way and got the right answer!"
            }
        },
        {
            "name": "chat::ada::python_functions::challenge::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Nope, wrong answer, try again."
            }
        },
        {
            "name": "artifact::python_functions::found_answer",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python_functions::found_answer"
            }
        },
        {
            "name": "python_functions::start-mission::python_lists",
            "type": "start-mission",
            "data": {
                "name": "python_lists"
            }
        },
        {
            "name": "chat::ada::python_lists::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Now let's learn a bit more about what you can do with lists. Python has a concept of list comprehensions, which you should try out in the python_lists task in showmehow."
            }
        },
        {
            "name": "python::setting::showmehow::add-python-lists",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["python_lists"]
                }
            }
        },
        {
            "name": "listen::python_lists::convert_list",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-convert-list",
                "received": [
                    "listen::python_lists::filter_list",
                    "artifact::python::convert_list"
                ]
            }
        },
        {
            "name": "artifact::python::convert_list",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::convert_list"
            }
        },
        {
            "name": "artifact::python::filter_list",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::filter_list"
            }
        },
        {
            "name": "artifact::python::dict_comprehension",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::dict_comprehension"
            }
        },
        {
            "name": "listen::python_lists::filter_list",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-filter-list",
                "received": [
                    "artifact::python::filter_list",
                    "listen::python_lists::dict_comprehension",
                    "python_lists::start-mission::python_classes"
                ]
            }
        },
        {
            "name": "listen::python_lists::dict_comprehension",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-dict-comprehension",
                "received": [
                    "artifact::python::dict_comprehension",
                    "listen::python_lists::dict_comprehension",
                    "python_lists::start-mission::python_classes"
                ]
            }
        },
        {
            "name": "python_lists::start-mission::python_classes",
            "type": "start-mission",
            "data": {
                "name": "python_classes"
            }
        },
        {
            "name": "chat::ada::python_classes::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Another python file. This time, it is going to contain some classes and objects and you'll need to add the right methods to the class in order to get things to work."
            }
        },
        {
            "name": "chat::ada::python_classes::enter_code",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Can you tell me what the output of this file is once you implement the missing methods?"
            }
        },
        {
            "name": "chat::ada::python_classes::intro::attachment",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "Ada",
                "attachment": {
                    "desc": "Object Oriented Programming in Python",
                    "path": "classes.py"
                }
            }
        },
        {
            "name": "chat::ada::python_classes::challenge",
            "type": "input-user",
            "data": {
                "actor": "Ada",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "python_classes::challenge"
                    }
                },
                "responses": {
                    "success": [
                        "chat::ada::python_classes::challenge::success",
                        "artifact::python_classes::found_answer",
                        "python_classes::start-mission::showmehow_python_gi"
                    ],
                    "failure": [
                        "chat::ada::python_classes::challenge::again",
                        "chat::ada::python_classes::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::ada::python_classes::challenge::success",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Correct! You put the classes together and got the right answer!"
            }
        },
        {
            "name": "chat::ada::python_classes::challenge::again",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "Nope, wrong answer, try again."
            }
        },
        {
            "name": "artifact::python_classes::found_answer",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python_classes::found_answer"
            }
        },
        {
            "name": "python_classes::start-mission::showmehow_python_gi",
            "type": "start-mission",
            "data": {
                "name": "showmehow_python_gi"
            }
        },
        {
            "name": "python::setting::showmehow::add-python-gi",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["python_gi"]
                }
            }
        },
        {
            "name": "chat::ada::showmehow_python_gi::intro",
            "type": "chat-actor",
            "data": {
                "actor": "Ada",
                "message": "You can use almost any programming language (including python) to interact with lots of different components on your system. For instance, you can send notifications or even create new windows. Check out the 'python-gi' task I added to showmehow for more."
            }
        },
        {
            "name": "listen::showmehow_python_gi::create_gi_binding",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-gi-create-gi-binding",
                "received": [
                    "artifact::python::create_gi_binding",
                    "listen::showmehow_python_gi::instantiate_gi_class"
                ]
            }
        },
        {
            "name": "artifact::python::create_gi_binding",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::create_gi_binding"
            }
        },
        {
            "name": "artifact::python::instantiate_gi_class",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::instantiate_gi_class"
            }
        },
        {
            "name": "artifact::python::send_gnotification",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::send_gnotification"
            }
        },
        {
            "name": "listen::showmehow_python_gi::instantiate_gi_class",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-gi-instantiate-gi-class",
                "received": [
                    "artifact::python::instantiate_gi_class",
                    "listen::showmehow_python_gi::send_gnotification"
                ]
            }
        },
        {
            "name": "listen::showmehow_python_gi::send_gnotification",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-gi-send-gnotification",
                "received": [
                    "artifact::python::send_gnotification"
                ]
            }
        },
        {
            "name": "chat::marlon::initial",
            "type": "chat-actor",
            "data": {
                "actor": "Marlon",
                "message": "If you ever want to try a different coding activity, let me know. Just choose from one of the below options:"
            }
        },
        {
            "name": "chat::marlon::where_to_go::input",
            "type": "input-user",
            "data": {
                "actor": "Marlon",
                "input": {
                    "type": "choice",
                    "settings": {
                        "prompt": "Where would you like to go?",
                        "choices": {
                            "intro": {
                                "text": "Introduction"
                            },
                            "shellextension": {
                                "text": "Shell extensions - Customize all the things"
                            },
                            "showmehow": {
                                "text": "Terminal - Dig into the system"
                            },
                            "processing": {
                                "text": "Processing - Code can be beautiful"
                            },
                            "codeview": {
                                "text": "CodeView - Sneak behind the screen"
                            },
                            "showmehow_python": {
                                "text": "Showmehow - Python"
                            },
                            "python_functions": {
                                "text": "Python Functions"
                            },
                            "popquiz": {
                                "text": "Pop Culture Quiz"
                            }
                        }
                    }
                },
                "responses": {
                    "intro": [
                        "start-mission::intro",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "shellextension": [
                        "shellextension::start-mission::shellextension",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "processing": [
                        "terminaltasks::start-mission::processing",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "codeview": [
                        "codeview::start-mission::weather",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "showmehow": [
                        "intro::start-mission::terminalintro",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "showmehow_python": [
                        "yoursystem::start-mission::python",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "python_functions": [
                        "showmehow_python::start-mission::python_functions",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ],
                    "popquiz": [
                        "popquiz::start-mission::popquiz",
                        "chat::marlon::where_to_go::response",
                        "chat::marlon::where_to_go::input"
                    ]
                }
            }
        },
        {
            "name": "chat::marlon::where_to_go::response",
            "type": "chat-actor",
            "data": {
                "actor": "Marlon",
                "message": "Excellent choice! Come back here if you ever want to switch to a different activity"
            }
        }
    ]
}
